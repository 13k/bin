#!/usr/bin/python
# search in the documents database for a given regexp

import os, sys, re, getopt
from stat import *
from time import *

##########
# CONFIG
##########

# User home directory
home = os.getenv('HOME')
# The database file
dbfile = home + '/.docsdb'
# How many days to I consider dbfile as old?
howold = 3

###########
# PROGRAM
###########

def usage():
	print "Usage: fdocs [-i] '<regexp>'"

def main():
	try:
		opts, args = getopt.getopt(sys.argv[1:], "i", ["insensitive"])
	except getopt.GetoptError:
		usage()
		sys.exit(1)
	
	if len(args) < 1:
		usage()
		sys.exit(1)
	
	flags = 0
	
	for o, a in opts:
		if o in ("-i", "--insensitive"):
			flags = re.I;

	exp = re.compile(' '.join(args), flags);

	ftime = os.stat(dbfile)[ST_MTIME]
	atime = time()

	diff = atime - ftime
	diff = diff / 86400

	if diff > howold:
		print "Database file is more than " + str(howold) + " days old."
		print "Consider updating the database running 'udocs'"

	f = open(dbfile, 'r')
	db = f.readlines()
	f.close()

	for file in db:
		try:
			file = file.strip('\n');
			f = open(file, 'r')
			cnt = f.readlines()
		except IOError, (errno, strerror):
			print "I/O error(%s): %s" % (errno, strerror)
			print "File: " + file
			continue
		else:
			found = [];
			for n, line in enumerate(cnt):
				m = exp.search(line);
				if m:
					found.append((n+1, m.string.strip('\n')));
			if found:
				print "File: " + file;
				for i in found:
					print " - " + str(i[0]) + "\t" + i[1];

if __name__ == "__main__":
	main()
